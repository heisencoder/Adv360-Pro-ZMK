
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp GRAVE     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5                &mo 2                                                                  &none  &kp N6    &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T                &none                                                             &kp INSERT   &kp Y     &kp U      &kp I     &kp O     &kp P  &kp EQUAL
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G                &none  &kp HOME    &kp END                  &kp RSHFT   &kp LGUI     &kp DEL   &kp H     &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                &none     &none  &kp PG_UP   &none   &none  &kp LSHFT      &none       &none   &kp N     &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
     &mo 1  &kp LCTRL  &kp BSLH  &kp LEFT  &kp RIGHT                    &kp SPACE  &kp BSPC  &kp PG_DN                   &kp LALT  &kp RCTRL   &kp ENTER          &kp DOWN     &kp UP  &kp LBKT  &kp RBKT      &mo 1
            >;
        };

        layer_fn {
            bindings = <
 &kp F11  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &trans                                                  &trans  &kp F6        &kp F7        &kp F8      &kp F9  &kp F10  &kp F11
 &kp F12  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans        &trans        &trans      &trans   &trans  &kp F12
  &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans        &trans        &trans      &trans   &trans   &trans
  &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none  &trans   &none   &none  &trans   &kp C_PAUSE    &kp C_PREV  &kp C_NEXT   &trans   &trans
  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

    };
};
